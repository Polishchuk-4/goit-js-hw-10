{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nlet userSelectedDate;\nconst buttonStart = document.querySelector('[data-start]');\nconst inputDateTime = document.querySelector('#datetime-picker');\nconst outputDate = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0].getTime();\n    if (userSelectedDate - Date.now() < 0) {\n      alert('Please choose a date in the future');\n      return;\n    }\n    buttonStart.disabled = false;\n    buttonStart.classList.add('button-active');\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nbuttonStart.addEventListener('click', event => {\n  buttonStart.classList.remove('button-active');\n\n  startTimer();\n});\n\nfunction startTimer() {\n  inputDateTime.disabled = true;\n  buttonStart.disabled = true;\n\n  const intervalId = setInterval(() => {\n    const { days, hours, minutes, seconds } = convertMs(\n      userSelectedDate - Date.now()\n    );\n\n    outputDate.days.textContent = days;\n    outputDate.hours.textContent = hours;\n    outputDate.minutes.textContent = minutes;\n    outputDate.seconds.textContent = seconds;\n\n    if (userSelectedDate < Date.now()) {\n      inputDateTime.disabled = false;\n      clearInterval(intervalId);\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","buttonStart","inputDateTime","outputDate","options","selectedDates","flatpickr","event","startTimer","intervalId","days","hours","minutes","seconds","convertMs","ms"],"mappings":"svBAGA,IAAIA,EACJ,MAAMC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAgB,SAAS,cAAc,kBAAkB,EACzDC,EAAa,CACjB,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErB,GADAL,EAAmBK,EAAc,CAAC,EAAE,QAAO,EACvCL,EAAmB,KAAK,IAAG,EAAK,EAAG,CACrC,MAAM,oCAAoC,EAC1C,MACD,CACDC,EAAY,SAAW,GACvBA,EAAY,UAAU,IAAI,eAAe,CAC1C,CACH,EAEAK,EAAU,mBAAoBF,CAAO,EAErCH,EAAY,iBAAiB,QAASM,GAAS,CAC7CN,EAAY,UAAU,OAAO,eAAe,EAE5CO,GACF,CAAC,EAED,SAASA,GAAa,CACpBN,EAAc,SAAW,GACzBD,EAAY,SAAW,GAEvB,MAAMQ,EAAa,YAAY,IAAM,CACnC,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGC,EACxCd,EAAmB,KAAK,IAAK,CACnC,EAEIG,EAAW,KAAK,YAAcO,EAC9BP,EAAW,MAAM,YAAcQ,EAC/BR,EAAW,QAAQ,YAAcS,EACjCT,EAAW,QAAQ,YAAcU,EAE7Bb,EAAmB,KAAK,QAC1BE,EAAc,SAAW,GACzB,cAAcO,CAAU,EAE3B,EAAE,GAAI,CACT,CAEA,SAASK,EAAUC,EAAI,CAQrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAE1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EAEpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EAEjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}